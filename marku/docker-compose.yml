version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend

  redis:
    image: redis
    command: --port 6380
    ports:
      - 6380:6380

  postgres:
    image: postgres:12
    restart: always
    env_file:
      - .env
    ports:
      - '5433:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery --broker=redis://redis:6380/0 --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1

  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6380/0 flower --port=5556
    ports:
      - 5556:5556
    depends_on:
      - "redis"

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    env_file:
      - .env
    depends_on:
      - "postgres"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URI: '/api'
    stdin_open: true
    working_dir: /app
    # volumes:
    #   - './frontend:/app:cached'
    #   - './frontend/node_modules:/app/node_modules:cached'
    env_file:
      - .env

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    env_file:
      - .env
    command: certonly --webroot --webroot-path=/var/www/certbot --email $CERTBOT_EMAIL --agree-tos --no-eff-email -d $CERTBOT_DOMAIN

volumes:
  db-data:
