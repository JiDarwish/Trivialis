version: '3.8'

services:
  webapp:
    platform: "linux/amd64"
    build:
      context: ./webapp
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    working_dir: /app
    image: t3-app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - langchain

  langchain:
    build: ./langchain
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./langchain:/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - cache

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  cache:
    image: redis:6.2
    volumes:
      - redis_data:/data

  webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - webapp

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgres_data:
  redis_data:
