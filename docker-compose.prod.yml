version: '3.8'

services:
  webapp:
    platform: "linux/amd64"
    build:
      context: ./webapp
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    working_dir: /app
    image: t3-app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - langchain
      - nginx

  langchain:
    build: ./langchain
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    depends_on:
      - db
      - cache

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  cache:
    image: redis:6.2
    volumes:
      - redis_data:/data

  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certbot.conf:/etc/nginx/certbot.conf
      - ./nginx/data/certbot:/etc/letsencrypt
    depends_on:
      - webapp
      - langchain

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/data/certbot:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  redis_data:
